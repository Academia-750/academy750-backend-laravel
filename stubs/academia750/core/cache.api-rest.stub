<?php
namespace {{ namespace }};

use {{ namespacedModel }};
use {{ namespacedInterface }};
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Cache;
use {{ namespacedDB }};
class {{ class }} implements {{ interfaceName }}
{
    protected DBApp ${{ dbNameVariable }};

    public function __construct(DBApp ${{ dbNameVariable }} ){
        $this->{{ dbNameVariable }} = ${{ dbNameVariable }};
    }

    public function index(){

        $nameCache = '';

        ( empty(request()->query()) ) ? $nameCache = '{{ modelVariableTagCache }}.get.all' : $nameCache = json_encode( request()->query() );

        return Cache::store('redis')->tags('{{ modelVariableTagCache }}')->rememberForever($nameCache, function () {
            return $this->{{ dbNameVariable }}->index();
        });

    }

    public function create( $request ){

        Cache::store('redis')->tags('{{ modelVariableTagCache }}')->flush();

        return $this->{{ dbNameVariable }}->create( $request );
    }

    public function read( ${{ modelVariable }} ){

        return Cache::store('redis')->tags('{{ modelVariableTagCache }}')->rememberForever("{{ modelVariableTagCache }}.find.".${{ modelVariable }}->getRouteKey(), function () use ( ${{ modelVariable }} ) {
            return $this->{{ dbNameVariable }}->read( ${{ modelVariable }} );
        });
    }

    public function update( $request, ${{ modelVariable }} ){

        Cache::store('redis')->tags('{{ modelVariableTagCache }}')->flush();

        return $this->{{ dbNameVariable }}->update( $request, ${{ modelVariable }} );
    }

    public function delete( ${{ modelVariable }} ): void{

        Cache::store('redis')->tags('{{ modelVariableTagCache }}')->flush();
        $this->{{ dbNameVariable }}->delete( ${{ modelVariable }} );
    }

    public function action_for_multiple_records( $request ): array{

        Cache::store('redis')->tags('{{ modelVariableTagCache }}')->flush();

        return $this->{{ dbNameVariable }}->action_for_multiple_records( $request );
    }

    public function export_records( $request ){
        $this->{{ dbNameVariable }}->export_records( $request );
    }

    public function import_records( $request ): void{
        Cache::store('redis')->tags('{{ modelVariableTagCache }}')->flush();
        $this->{{ dbNameVariable }}->import_records( $request );
    }

}
