name: Deploy API
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Checkout code
        uses: actions/checkout@v2

      # - name: Set up Redis
      #   uses: shogo82148/actions-setup-redis@v1
      #   with:
      #     redis-version: "6.x"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Run composer install
        run: composer install

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan --version

      - name: Run tests
        run: php artisan test
        env:
          APP_ENV: testing

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      SERVER: ${{ vars.STAGING_SERVER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      FOLDER_NAME: "backend"

    steps:
      - name: ðŸšš Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production
        uses: easingthemes/ssh-deploy@v2.2.4
        with:
          SSH_PRIVATE_KEY: ${{ env.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ env.SERVER }}
          REMOTE_USER: ubuntu
          REMOTE_PORT: 22
          SOURCE: ""
          TARGET: "/var/www/${{ env.FOLDER_NAME }}"
          ARGS: "-rltgoDzvO --delete"
          EXCLUDE: ".env, pm2.json storage/*"

      - name: Installing the new version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER }}
          username: ubuntu
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /var/www/${{ env.FOLDER_NAME }}
            (php artisan down) || true
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            php artisan optimize
            php artisan migrate --force
            php artisan up
            echo "ðŸŽ‰ Deployment finished!"
